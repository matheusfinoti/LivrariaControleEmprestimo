@model EmprestimoViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar</h1>

<h4>Empréstimo</h4>
<hr />
<div class="row">
    <div class="col-md">
        <form asp-action="Edit">
            <div>
                <a class="form-group btn btn-dark" asp-action="Index"><i class="fa fa-arrow-left"></i> Voltar</a>
            </div>
            <br />

            <div class="card col-md-4">
                <div class="card-header">Devolução</div>
                <div class="card-body">
                    <div class="form-check">
                        <input asp-for="oLivroClienteEmprestimo.LceEntregue" class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault">
                            Entregue
                        </label>
                    </div>
                </div>
            </div>

            <br />
            <div hidden class="form-group col-md-6">
                <input id="idCliente" asp-for="oLivroClienteEmprestimo.LceIdCliente" class="form-control" />
            </div>
            <div hidden class="form-group col-md-6">
                <input id="idLivro" asp-for="oLivroClienteEmprestimo.LceIdLivro" class="form-control" />
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="card">
                <div class="card-header">Cliente</div>
                <div class="card-body">
                    <table id="clienteTable" class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.oCliente.Id)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oCliente.CliCpf)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oCliente.CliNome)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.oCliente.CliTelefoneCelular)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oCliente.CliTelefoneFixo)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.oListClientes)
                            {
                                <tr onclick="pegarIdCliente('@item.Id')">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Id)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CliCpf)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CliNome)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.CliTelefoneCelular)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CliTelefoneFixo)
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-2">
                <div class="card-header">Livro</div>
                <div class="card-body">
                    <table id="livroTable" class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.oLivro.LivroNome)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oLivro.LivroAutor)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oLivro.LivroEditora)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oLivro.LivroAnoPublicacao)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oLivro.LivroEdicao)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.oListLivros)
                            {
                                <tr onclick="pegarIdLivro('@item.Id')">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LivroNome)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LivroAutor)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LivroEditora)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LivroAnoPublicacao)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LivroEdicao)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-2">
                <div class="card-header">Datas</div>
                <div class="card-body row">
                    <div class="form-group col-md-6">
                        <label asp-for="oLivroClienteEmprestimo.LceDataEmprestimo" class="control-label"></label>
                        <input readonly="readonly" asp-for="oLivroClienteEmprestimo.LceDataEmprestimo" class="form-control" />
                        <span asp-validation-for="oLivroClienteEmprestimo.LceDataEmprestimo" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="oLivroClienteEmprestimo.LceDataEntrega" class="control-label"></label>
                        <input asp-for="oLivroClienteEmprestimo.LceDataEntrega" class="form-control" />
                        <span asp-validation-for="oLivroClienteEmprestimo.LceDataEntrega" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        // Tabela Cliente

        let clienteTable = new DataTable('#clienteTable', {
            language: {
                url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/pt-BR.json"
            }
        });

        clienteTable.on('click', 'tbody tr', (e) => {
            let classList = e.currentTarget.classList;

            if (!classList.contains('selected')) {
                clienteTable.rows('.selected').nodes().each((row) => row.classList.remove('selected'));
                classList.add('selected');
            }
        });

        $('#clienteTable tbody tr td').filter(":contains('" + @Model.oLivroClienteEmprestimo.LceIdCliente +"')")[0].parentElement.setAttribute('class', 'selected');

        // Tabela Livro

        let livroTable = new DataTable('#livroTable', {
            language: {
                url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/pt-BR.json"
            }
        });


        livroTable.on('click', 'tbody tr', (e) => {
            let classList = e.currentTarget.classList;

            if (!classList.contains('selected')) {
                livroTable.rows('.selected').nodes().each((row) => row.classList.remove('selected'));
                classList.add('selected');
            }
        });

        $('#livroTable tbody tr td').filter(":contains('" + @Model.oLivroClienteEmprestimo.LceIdLivro +"')")[0].parentElement.setAttribute('class', 'selected');



        function pegarIdCliente(idCliente) {
            document.getElementById('idCliente').value = idCliente;
        }

        function pegarIdLivro(idLivro) {
            document.getElementById('idLivro').value = idLivro;
        }
    </script>
}

